requiredWinstVersion >= "4.12.0.16"

DefVar $ConfigSystempath$
DefVar $CurrentPathElement$
DefVar $CustomPostInstall$
DefVar $CustomPostDeinstall$
DefVar $ExitCode$
DefVar $ErrorString$
DefVar $FunctionStatus$
DefVar $INST_SystemType$
DefVar $InstallDir$
DefVar $InstalledVersion$
DefVar $LogDir$
DefVar $MinimumSpace$
DefVar $MSVersion$
DefVar $ProductId$  
DefVar $ProductName$
DefVar $ProductVersion$
DefVar $ProductVersionWoDots$
DefVar $RegEnv$
DefVar $RegId$
DefVar $RegBitScope$
DefVar $SearchPattern$
DefVar $SetupFile64$
DefVar $UninstallProgram$
DefStringList $DirsToAdd$
DefStringList $PathDirsToAdd$
DefStringList $ResultList$

Set $LogDir$ 		= "%opsiLogDir%"
Set $INST_SystemType$   = GetSystemType
Set $MSVersion$	    	= GetMsVersionInfo

if not ($MSVersion$ = "10.0")
	Logwarning "Only tested with windows 10! Please report to the maintainer successful installation on other windows versions."	
endif
if not ($INST_SystemType$ = "64 Bit System")
	LogError "Actually there is no 32 bit version included in this package!"
	isFatalError
endif

Set $ConfigSystempath$ = GetProductProperty("config_systempath","yes with reboot")

Set $ProductVersion$ = takestring (0, splitString("%installingProdVersion%", "-"))
; Version lautet z.B. "9.19", Dateien lauten "919, also Punkt muss f√ºr Setupfile weg
Set $ProductVersionWoDots$ = takestring (0, splitString($ProductVersion$, ".")) + takestring (1, splitString($ProductVersion$, "."))

; ---------------------------------------------------------------
; - Please edit the following values                             -
; ----------------------------------------------------------------
Set $ProductId$		= "dfn_ghostscript"
Set $ProductName$  	= "Ghostscript"
Set $MinimumSpace$	= "60 MB"
Set $SetupFile64$	= "gs" + $ProductVersionWoDots$ + "w64.exe"
; ----------------------------------------------------------------

; exitcode library von UIB (siehe C:\program files(x86)\opsi.org\opsi-client-agent\opsi-winst\lib) mit 'local functions'
importLib "uib_exitcode.opsiscript"
; Library registry search uninstall keys (local functions)
importLib "func_search_registry_uninstall_keys.opsiinc"
importLib "func_config_systempath.opsiinc"

comment "Show product picture"
if (FileExists("%ScriptPath%\..\lib\icons\%installingProdName%.png"))
       comment "logo at local library/icons found."
       ShowBitmap "%ScriptPath%\..\lib\icons\%installingProdName%.png" $ProductName$
else
       comment "no logo at local library/icons, use from ScriptPath ..."
       ShowBitmap "%ScriptPath%\o4i.png" $ProductName$
endif
