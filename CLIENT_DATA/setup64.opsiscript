[Actions]
include_insert "common.opsiinc"

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
	; Stop process and set installation status to failed
else
	if FileExists("%ScriptPath%\delsub64.opsiscript")
		comment "Start uninstall sub section"
		Sub "%ScriptPath%\delsub64.opsiscript"
	endif

	Message "Installing %installingProdName% (%installingProdVersion%) 64 Bit..."
	comment "Start setup program"
	Winbatch_install
	Set $ExitCode$ = getLastExitCode
	if stringToBool(isMsExitcodeFatal($ExitCode$, "True", $ErrorString$))
		isFatalError
	endif	
		
	comment "Test for installation success"
	; Ergebnis ist StringList (mehrere Einträge möglich);
	; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
	; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
	Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)	
	
	if ( count ($ResultList$) = "0" )
		logError "Fatal: After Installation " + $ProductName$ + " could not be found in registry"
		isFatalError
	else
		comment "Successful Installation"

		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))

		comment "Check version"
		Set $InstalledVersion$ = GetRegistryValue($RegId$, "DisplayVersion", $RegBitScope$)
		if not ($InstalledVersion$ = $ProductVersion$)
			LogError "Fatal: version of installation differ from package"
			isFatalError
		endif
		
		if contains ($ConfigSystempath$, "yes")
			comment "Adding directories to systempath"
			; InstallDir muss aus UninstallString extrahiert werden
			Set $UninstallProgram$ = GetRegistryValue($RegId$, "UninstallString", $RegBitScope$)
			; entferne störende Anführungszeichen im Registry-Wert
			Set $UninstallProgram$ = takeString (1, splitString ( $UninstallProgram$ , '"'))
			Set $InstallDir$ = ExtractFilePath($UninstallProgram$)
			
			Set $PathDirsToAdd$ = createStringList($InstallDir$ + "lib", $InstallDir$ + "bin")
			; function call with directories to add to the system path
			Set $FunctionStatus$ = AddToPath($PathDirsToAdd$)
		endif
		
		comment "include custom post install file"
		set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
		if not ($CustomPostInstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
			endif
		endif		
	endif		
endif

[Winbatch_install]
"%ScriptPath%\$SetupFile64$" /S

