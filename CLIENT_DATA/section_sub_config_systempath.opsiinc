[Sub_add_to_path]
Set $dirsToAdd$  = createStringList ($InstallDir$ + 'lib', $InstallDir$ + 'bin')
set $path_before$ = GetRegistryStringValueSysNative($RegEnv$ + " Path")
set $path$ = $path_before$

for %s% in $dirsToAdd$ do Sub_add_item_to_path ;prüfe, ob schon pfade vorhanden sind
Sub_commit_changes

[Sub_remove_from_path]
set $path_before$ = GetRegistryStringValueSysNative($RegEnv$ + " Path")
set $path$ = $path_before$
set $splitted$ = splitString ($path$, ";")
;dahinter fehlen jetzt die semikolons, also beim vergleichen wieder anfügen
                                                         
for %a% in $splitted$ do Sub_remove_item_from_path
Sub_commit_changes

[Sub_commit_changes]
comment "Path before: '" + $path_before$ + "'"
comment "Path now: '" + $path$ + "'"

registry_write_path

; only reboot if "Path" was changed and reboot desired
if ($ConfigSystempath$ = "yes with reboot") 
	if not (lower($path$) = lower($path_before$))
		ExitWindows /Reboot
	endif
endif

[Sub_add_item_to_path]
if not (contains ($path$, "%s%"))
	set $path$ = $path$ + ";" + "%s%"
endif

[Sub_remove_item_from_path]

set $CurrentPathElement$ = "%a%"
; contains ist case-sensitive, lower vermeidet Fehler beim Entfernen (Danke an Andreas Welbers für den Patch!)
if contains (lower($CurrentPathElement$), lower($InstallDir$))
	;if there is a leading ";", we know that there are values in front of this one, so we can delete ";VALUE" completly
	set $path$ = stringReplace($path$, ";" + "%a%" , "")
	;if the value is still there now, there are no entrys before this one, so have to remove "VALUE;"
	set $path$ = stringReplace($path$, "%a%" + ";" , "")
endif

[registry_write_path]
openkey $RegEnv$
set "Path"=REG_EXPAND_SZ:"$path$"

