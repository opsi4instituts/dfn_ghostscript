Message "Searching installation of " + $ProductName$ + " 64 Bit..."
; Ergebnis ist StringList (mehrere Einträge möglich);
; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

Switch count ($ResultList$)
	Case "0"
		comment "No installations of " + $ProductName$ + " found in registry. Nothing to do ;-) "
	EndCase
	Case "1"
		comment "Found one installation of " + $ProductName$ + " in registry, trying to deinstall"

		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))

		Set $UninstallProgram$ = GetRegistryValue($RegId$, "UninstallString", $RegBitScope$)
		; entferne störende Anführungszeichen im Registry-Wert
		Set $UninstallProgram$ = takeString (1, splitString ( $UninstallProgram$ , '"'))
		; InstallDir kann aus UninstallProgram extrahiert werden
		Set $InstallDir$ = ExtractFilePath($UninstallProgram$)

		Winbatch_uninstall
		Set $ExitCode$ = getLastExitCode
		if stringToBool(isMsExitcodeFatal($ExitCode$, "True", $ErrorString$))
			isFatalError
		endif		

		;löscht vielleicht vorhandene Überbleibsel des Programmes
		if FileExists($InstallDir$)
			Files_uninstall
		endif	

		if contains ($ConfigSystempath$, "yes")
			comment "Removing directories from systempath"
			; function call to remove all directories which contain the installation directory from the system path
			Set $FunctionStatus$ = RemoveContainingFromPath($InstallDir$)
		endif
		
		comment "include custom post deinstall file"
		set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
		if not ($CustomPostDeinstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
			endif
		endif
	EndCase
	DefaultCase
		logError "Found more than one installation! This case is not intended yet in this script! Stop now."
		isFatalError
	EndCase
EndSwitch

[Winbatch_uninstall]
"$UninstallProgram$" /S

[Files_uninstall]
delete -sf $InstallDir$
